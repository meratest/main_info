Git How To:
___________________________________________________________________
Наш общий проет: https://github.com/meratest/main_info.git
(login\mail\password meratest\mera.test@yandex.ru\Qwerty1_qw)
___________________________________________________________________

Запускаем Git Bash

cd /d/git_test
git clone https://github.com/meratest/main_info.git  b1 // создаём локальную копию нашего общего проекта







___________________________________________________________________
Команды:
git init	создание проета
git clone [url] или git clone [url] [name]	клонирование проета
git status	проверка статуса файлов проекта
git add	добавление файла в проект\индексирование изменённых файлов
git commit -m 'initial project version'
git diff	показывает непосредственно добавленные и удалённые строки
git diff --cached	что проиндексировали и что войдёт в следующий коммит
git rm	удаление файла
git rm -f	удаление проиндексированного файла
git rm --cached	удалить файл из индекса
git rm log/\*.log	удаляет все файлы, которые имеют расширение .log в каталоге log/
git rm \*~	 удаляет все файлы, чьи имена заканчиваются на ~
git mv file_from file_to	переименовать файл
git commit --amend	 команда берёт индекс и использует его для коммита
git reset HEAD <file>	отмена индексирования файла
git checkout -- <file>	отменить все изменения
git remote	удалённые серверы
git remote -v	URL
git remote add [сокращение] [url]	 добавление удаленного репозитория
git fetch <name or link>	 добавляет инфо которая есть в репозитории <name or link> но нет в вашем 
git fetch origin	забрать изменения с основного проекта
git pull	автоматически извлекает и затем сливает данные из удалённой ветки в вашу текущую ветку
git push [удал. сервер] [ветка]	залить изменения в основной проект\индексирование
git push origin master
git remote show [удал. сервер]	получить больше информации об одном из удалённых репозиториев
git remote rename [old_name] [new_name]	переименование ссылок в новых версиях Git'а
git remote rm [name]	удаление репозитория
git tag	Просмотр имеющихся меток 
git tag -l 'v1.4.2.*'	поиск меток по шаблону
git tag -a [name_tag] -m 'меточное сообщение'	добавление аннотированной метки
git show [name_tag]	посмотреть данные метки вместе с коммитом
git tag -s [name_tag] -m 'меточное сообщение'	создание подписанной метки, нужен ключ
git tag [name_tag]	создание легковесной метки
git tag -v [name_tag]	проверка подписанной метки
git tag -a [name_tag] -m 'меточное сообщение' [контрольная сумма или её часть]
git push origin [name_tag]	отправление меток
git push origin --tags	отправление всех меток




git tag -a v0.1 -m '2.3 info' e8d7
git push origin v0.1
git log	история коммитов
___________________________________________________________________
Параметр 	Описание
-p 	Для каждого коммита показывать дельту внесённых им изменений.
--word-diff 	Показывать изменения на уровне слов.
--stat 	Для каждого коммита дополнительно выводить статистику по изменённым файлам.
--shortstat 	Показывать только строку changed/insertions/deletions от вывода с опцией --stat.
--name-only 	Показывать список изменённых файлов после информации о коммите.
--name-status 	Выводить список изменённых файлов вместе с информацией о добавлении/изменении/удалении.
--abbrev-commit 	Выводить только первые несколько символов контрольной суммы SHA-1 вместо всех 40.
--relative-date 	Выводить дату в относительном формате (например, "2 weeks ago") вместо полной даты.
--graph 	Показывать ASCII-граф истории ветвлений и слияний рядом с выводом лога.
--pretty 	Отображать коммиты в альтернативном формате. Возможные параметры: oneline, short, full, fuller и format (где вы можете указать свой собственный формат).
___________________________________________________________________
git log -p -2	 история с разницей, огранино 2 последними.
git log -p --word-diff
git log -U1 --word-diff
git log --stat	 статистика по коммиту
git log --pretty=oneline	 в одну строку
git log --since=2.weeks	ограничение по времени
git log --pretty=format:"%h - %an, %ar : %s"
___________________________________________________________________
Параметр 	Описание выводимых данных
%H 	Хеш коммита
%h 	Сокращённый хеш коммита
%T 	Хеш дерева
%t 	Сокращённый хеш дерева
%P 	Хеши родительских коммитов
%p 	Сокращённые хеши родительских коммитов
%an 	Имя автора
%ae 	Электронная почта автора
%ad 	Дата автора (формат соответствует параметру --date=)
%ar 	Дата автора, относительная (пр. "2 мес. назад")
%cn 	Имя коммитера
%ce 	Электронная почта коммитера
%cd 	Дата коммитера
%cr 	Дата коммитера, относительная
%s 	Комментарий
___________________________________________________________________
Опция ограничения 	Описание
-(n) 	Показать последние n коммитов
--since, --after 	Ограничить коммиты теми, которые сделаны после указанной даты.
--until, --before 	Ограничить коммиты теми, которые сделаны до указанной даты.
--author 	Показать только те коммиты, автор которых соответствует указанной строке.
--committer 	Показать только те коммиты, коммитер которых соответствует указанной строке.
___________________________________________________________________
git log --pretty=format:"%h %s" --graph	отображается граф-ветвление

Файл .gitignore в котором шаблоны типа *.[oa], *~ чтобы файлы не отображались

git:// (у нас не работает) или http(s):// или user@server:/path.git
___________________________________________________________________
Restrictions:
Названия файлов без пробелов